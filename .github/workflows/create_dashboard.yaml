name: Create Dashboard

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      api-name:
        description: 'Api name for which create dashboards and alerts'
        required: true
        type: choice
        options:
          - ecommerce-checkout
      environment:
        description: 'Environment for which create dashboards and alerts'
        required: true
        type: choice
        options:
          - dev
  repository_dispatch:
    types:
      - create-dashboard

env:
  TEMPLATE_DIR: azure-dashboard

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  dashboard:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    environment:
      name: ${{ inputs.environment }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        id: checkout
        # from https://github.com/actions/checkout/commits/main
        uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707
        with:
          persist-credentials: false
      - name: Read create dashboard parameters
        id: read_parameters
        uses: actions/github-script@v6.3.3
        env:
          API_NAME_WEBHOOK: ${{ github.event.client_payload.api-name }}
          ENVIRONMENT_WEBHOOK: ${{ github.event.client_payload.environment }}
          API_NAME_MANUAL: ${{ inputs.api-name }}
          ENVIRONMENT_MANUAL: ${{ inputs.environment }}
        with:
          script: |
             const { API_NAME_WEBHOOK, ENVIRONMENT_WEBHOOK, API_NAME_MANUAL, ENVIRONMENT_MANUAL } = process.env
              var apiName = API_NAME_WEBHOOK.trim();
              var environment = ENVIRONMENT_WEBHOOK.trim();
              if (!apiName || !environment) {
              core.info(`No parameters found inside repository dispatch event, checking workflow parameters...`);
              apiName = API_NAME_MANUAL.trim();
              environment = ENVIRONMENT_MANUAL.trim();
              }
              core.info(`Api name ${apiName}, environment: ${environment}`);
                if (!apiName || !environment) {
                throw `Could not create dashboard, cannot find parameters...`;
              }
                core.setOutput("apiName", apiName);
                core.setOutput("environment", environment);
            

      # this action create a folder named /azure-dashboard
      # from https://github.com/pagopa/opex-dashboard-azure-action/commits/main
      - uses: pagopa/opex-dashboard-azure-action@ece3bc2b133be74cabb50aec14cdb9b8051b886f
        with:
          environment: ${{ steps.read_parameters.outputs.environment }}
          api-name: ${{ steps.read_parameters.outputs.apiName }}
          config: .opex/${{ steps.read_parameters.outputs.apiName }}/env/${{ steps.read_parameters.outputs.environment }}/config.yaml
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
          # from https://github.com/pagopa/opex-dashboard-azure-action/pkgs/container/opex-dashboard-azure-action
          docker-version: sha256:d9465f04e469c8f65bb1fb21cb9688508c64fda75495f552e858fb5a9580be90
